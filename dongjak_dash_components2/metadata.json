{
  "src/ts/components/AdminAppLayout.tsx": {
    "displayName": "AdminAppLayout",
    "description": "",
    "props": {
      "nodes": {
        "description": "",
        "required": false,
        "type": {
          "name": "node",
          "raw": "ReactNode"
        }
      },
      "routes": {
        "description": "",
        "required": false,
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "union",
            "value": [
              {
                "name": "shape",
                "value": {
                  "id": {
                    "description": "",
                    "required": true,
                    "name": "string",
                    "raw": "string"
                  },
                  "label": {
                    "description": "",
                    "required": true,
                    "name": "string",
                    "raw": "string"
                  },
                  "icon": {
                    "description": "",
                    "required": false,
                    "name": "node",
                    "raw": "ReactNode"
                  }
                },
                "raw": "{ id: string; label: string; icon?: ReactNode; }"
              },
              {
                "name": "shape",
                "value": {
                  "path": {
                    "description": "",
                    "required": false,
                    "name": "string",
                    "raw": "string"
                  }
                },
                "raw": "Pick<RouteObject, \"path\">"
              }
            ],
            "raw": "RouteObjectProps"
          },
          "raw": "RouteObjectProps[]"
        }
      },
      "id": {
        "description": "Unique ID to identify this component in Dash callbacks.",
        "required": false,
        "type": {
          "name": "string",
          "raw": "string"
        }
      },
      "setProps": {
        "description": "Update props to trigger callbacks.",
        "required": true,
        "type": {
          "name": "func",
          "raw": "(props: Record<string, any>) => void"
        }
      },
      "children": {
        "description": "",
        "required": false,
        "type": {
          "name": "node",
          "raw": "ReactNode"
        }
      }
    },
    "isContext": false
  },
  "src/ts/components/DongjakDashComponents2.tsx": {
    "displayName": "DongjakDashComponents2",
    "description": "Component description\r",
    "props": {
      "test": {
        "description": "",
        "required": true,
        "type": {
          "name": "node",
          "raw": "ReactNode"
        }
      },
      "id": {
        "description": "Unique ID to identify this component in Dash callbacks.",
        "required": false,
        "type": {
          "name": "string",
          "raw": "string"
        }
      },
      "setProps": {
        "description": "Update props to trigger callbacks.",
        "required": true,
        "type": {
          "name": "func",
          "raw": "(props: Record<string, any>) => void"
        }
      }
    },
    "isContext": false
  },
  "src/ts/components/FunctionCall.tsx": {
    "displayName": "FunctionCall",
    "description": "",
    "props": {
      "inputs": {
        "description": "",
        "required": false,
        "type": {
          "name": "node",
          "raw": "ReactNode"
        }
      },
      "outputs": {
        "description": "",
        "required": false,
        "type": {
          "name": "node",
          "raw": "ReactNode"
        }
      },
      "docs": {
        "description": "",
        "required": false,
        "type": {
          "name": "node",
          "raw": "ReactNode"
        }
      },
      "id": {
        "description": "Unique ID to identify this component in Dash callbacks.",
        "required": false,
        "type": {
          "name": "string",
          "raw": "string"
        }
      },
      "setProps": {
        "description": "Update props to trigger callbacks.",
        "required": true,
        "type": {
          "name": "func",
          "raw": "(props: Record<string, any>) => void"
        }
      },
      "children": {
        "description": "",
        "required": false,
        "type": {
          "name": "node",
          "raw": "ReactNode"
        }
      }
    },
    "isContext": false
  }
}